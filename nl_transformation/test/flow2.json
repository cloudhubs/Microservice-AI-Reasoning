{
    "msController": {
        "msId": {
            "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
            "directoryName": "/ts-contacts-service/src/main/java/contacts"
        },
        "classId": "contacts.controller.ContactsController",
        "packageName": "contacts.controller",
        "className": "ContactsController",
        "role": "CONTROLLER"
    },
    "msControllerMethod": {
        "msId": {
            "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
            "directoryName": "/ts-contacts-service/src/main/java/contacts"
        },
        "returnType": "HttpEntity",
        "methodName": "getAllContacts",
        "className": "ContactsController",
        "packageName": "contacts.controller",
        "methodId": "contacts.controller.ContactsController.getAllContacts",
        "classId": "contacts.controller.ContactsController",
        "line": 34,
        "msArgumentList": [
            {
                "returnType": "HttpHeaders"
            }
        ],
        "msAnnotations": [
            {
                "isHttpAnnotation": true,
                "annotationName": "CrossOrigin",
                "key": "origins",
                "value": "\"*\""
            },
            {
                "isHttpAnnotation": true,
                "annotationName": "GetMapping",
                "key": "path",
                "value": "\"/contacts\""
            }
        ]
    },
    "msServiceMethodCall": {
        "msId": {
            "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
            "directoryName": "/ts-contacts-service/src/main/java/contacts"
        },
        "parentPackageName": "contacts.controller",
        "parentClassName": "ContactsController",
        "parentMethodName": "getAllContacts",
        "parentClassId": "contacts.controller.ContactsController",
        "lineNumber": 38,
        "calledMethodName": "getAllContacts",
        "calledServiceId": "contactsService",
        "statementDeclaration": "contactsService.getAllContacts(headers)"
    },
    "msControllerServiceField": {
        "msId": {
            "path": "/ts-contacts-service/src/main/java/contacts/controller/ContactsController.java",
            "directoryName": "/ts-contacts-service/src/main/java/contacts"
        },
        "fieldClass": "ContactsService",
        "fieldVariable": "contactsService",
        "parentMethod": {
            "parentClassName": "ContactsController",
            "parentPackageName": "contacts.controller"
        },
        "line": 24
    },
    "msService": {
        "msId": {
            "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
            "directoryName": "/ts-contacts-service/src/main/java/contacts"
        },
        "classId": "contacts.service.ContactsServiceImpl",
        "packageName": "contacts.service",
        "className": "ContactsServiceImpl",
        "role": "SERVICE"
    },
    "msServiceMethod": {
        "msId": {
            "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
            "directoryName": "/ts-contacts-service/src/main/java/contacts"
        },
        "returnType": "Response",
        "methodName": "getAllContacts",
        "className": "ContactsServiceImpl",
        "packageName": "contacts.service",
        "methodId": "contacts.service.ContactsServiceImpl.getAllContacts",
        "classId": "contacts.service.ContactsServiceImpl",
        "line": 115,
        "msArgumentList": [
            {
                "returnType": "HttpHeaders"
            }
        ],
        "msAnnotations": [
            {
                "isHttpAnnotation": false,
                "annotationName": "Override"
            }
        ]
    },
    "msRepositoryMethodCall": {
        "msId": {
            "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
            "directoryName": "/ts-contacts-service/src/main/java/contacts"
        },
        "parentPackageName": "contacts.service",
        "parentClassName": "ContactsServiceImpl",
        "parentMethodName": "getAllContacts",
        "parentClassId": "contacts.service.ContactsServiceImpl",
        "lineNumber": 117,
        "calledMethodName": "findAll",
        "calledServiceId": "contactsRepository",
        "statementDeclaration": "contactsRepository.findAll()"
    },
    "msServiceRepositoryField": {
        "msId": {
            "path": "/ts-contacts-service/src/main/java/contacts/service/ContactsServiceImpl.java",
            "directoryName": "/ts-contacts-service/src/main/java/contacts"
        },
        "fieldClass": "ContactsRepository",
        "fieldVariable": "contactsRepository",
        "parentMethod": {
            "parentClassName": "ContactsServiceImpl",
            "parentPackageName": "contacts.service"
        },
        "line": 22
    },
    "msRepository": {
        "msId": {
            "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
            "directoryName": "/ts-contacts-service/src/main/java/contacts"
        },
        "classId": "contacts.repository.ContactsRepository",
        "packageName": "contacts.repository",
        "className": "ContactsRepository",
        "role": "REPOSITORY"
    },
    "msRestCalls": [],
    "msRepositoryMethod": {
        "msId": {
            "path": "/ts-contacts-service/src/main/java/contacts/repository/ContactsRepository.java",
            "directoryName": "/ts-contacts-service/src/main/java/contacts"
        },
        "returnType": "ArrayList<Contacts>",
        "methodName": "findAll",
        "className": "ContactsRepository",
        "packageName": "contacts.repository",
        "methodId": "contacts.repository.ContactsRepository.findAll",
        "classId": "contacts.repository.ContactsRepository",
        "line": 46,
        "msArgumentList": [],
        "msAnnotations": [
            {
                "isHttpAnnotation": false,
                "annotationName": "Override"
            }
        ]
    }
}